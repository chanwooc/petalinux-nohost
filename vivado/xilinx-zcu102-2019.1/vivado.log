#-----------------------------------------------------------
# Vivado v2019.1 (64-bit)
# SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
# Start of session at: Sat May 25 00:36:11 2019
# Process ID: 105661
# Current directory: /tmp/tmp.m62wemyBVS/temp
# Command line: vivado -mode batch -source ../build.tcl -tclargs -pl none -preset zcu102 -build bit -jobs 16 -filename xilinx-zcu102-2019.1
# Log file: /tmp/tmp.m62wemyBVS/temp/vivado.log
# Journal file: /tmp/tmp.m62wemyBVS/temp/vivado.jou
#-----------------------------------------------------------
Sourcing tcl script '/tmp/tmp.m62wemyBVS/dummy.tcl'
100 Beta devices matching pattern found, 100 enabled.
enable_beta_device: Time (s): cpu = 00:00:05 ; elapsed = 00:00:05 . Memory (MB): peak = 1524.883 ; gain = 35.516 ; free physical = 71166 ; free virtual = 532373
source ../build.tcl
# proc help_proc { } {
# 
# 	puts "****************************************"
# 	puts "HELP MENU"
# 	puts "****************************************"
# 	puts ""
# 	puts "Script name: build.tcl"
# 	puts " "
# 	puts "This script can be used to generate a variety of Zynq MPSoC Designs using Vivado."
# 	puts ""
# 	puts "Options:"
# 	puts "      -board, -dc, -clk, -ddr, -pl, -build, -help"
# 	puts " -board ... Specifies the board that will be used. The following options are available:"
# 	puts "      zc1751, zc12xx, zc165x, zcu100, zcu102, zcu104, zcu106, zcu111, zcu112, afx, afx_a484, afx_a625, afx_b900, afx_b1156, afx_b1517, afx_c784, afx_c900, afx_c1156, afx_c1760, afx_d1156, afx_e1924, afx_f1517"
# 	puts " -rev ... Specifies the board revision. The following options are available:"
# 	puts "		(for new zcu102) 1.0"
# 	puts "		(for old zcu102) E"
# 	puts "		default zcu102 is rev E"
# 	puts "		(for zcu100) A or B; default is rev B"
# 	puts " -silicon ... Specifies the silicon part that will be used. The following options are available:"
# 	puts "      da7 (default), da7-es1, da7-es2, da7-c900, da10, da10-b1156, da10-es1, da10-b1156-es1, da10-c900, da2, da2-es1, da2-a484, da2-a484-es1, da2-c784, da2-c784-es1, da4, da4-c784, da6, da6-2, da6-2-es2, da6-c1156, da6-c1156-es2, da6-b900, da6-f1517, da8, da8-b1517, da8-c1156, da8-c1760, da8-f1517, da11, da11-c1760, da11-c1760-es2, da11-b1517, da11-b1517-es2, da11-e1924, da11-e1924-es2, dc12-d1156, dc12-d1156-es1"	
# 	puts " -ps ... Specifies PS type.  The following options are available:"
# 	puts "      eg (default), ev (default for da6), cg"
# 	puts " -preset ... Specifies Vivado board preset to be used.  This overrides all other PS and device settings."
# 	puts " -useheadrepo ... Use HEAD_latest repo for board presets."
# 	puts " -dc ...  Selects the daughter card to be used. The following options are available:"
# 	puts "      (for zc1751) dc1, dc2, dc3, dc4, dc5"
# 	puts "      (for zcu102) gt0000, gt1100, gt1110, gt1111"
# 	puts "      (for afc_c1156) afx_sd"
# 	puts "      none"
# 	puts " -clk ... Specifies the clock frequency options. The following options are available:"
# 	puts "      sivdef  - optimal default frequencies"
# 	puts "      sivdef2  - optimal default frequencies for 2.0 silicon"
# 	puts "      sivdef3  - optimal default frequencies for 3.0/production silicon"
# 	puts "      video  - sivdef3 with modifications to support video usecases"
# 	puts "      bringup - conservative default frequencies"
# 	puts ""
# 	puts " -ddr ... Specifies DDR controller settings.  The following options are available:"
# 	puts "      default, default_32bit"
# 	puts ""
# 	puts " -pl ... Specifies PL design. The following options are available:"
# 	puts "      none - block diagram with only the Zynq MPSoC IP"
# 	puts "      base - user design for standalone and Linux testing"
# 	puts "      mig  - base design with MIG PL DDR4 added"
# 	puts "      bup  - BURST User Project"
# 	puts "      bram - BRAM-only PL design"
# 	puts "      trace 	- EMIO trace design used for XM105"	
# 	puts "      vcu_uc1_pll - use case 1 with DP, SD, MIG, Ethernet. ENC and DEC connected to PS. pll ref connected to VCU"
# 	puts "      vcu_uc1_bypass - use case 1 with DP, SD, MIG, Ethernet. ENC and DEC connected to PS. VCU in bypass"
# 	puts "      vcu_uc2_pll - use case 2 similar to use case 1 except DEC is connected to MIG. pll ref connected to VCU"
# 	puts "      vcu_uc2_bypass - use case 2 similar to use case 1 except DEC is connected to MIG. VCU in bypass"
# 	puts "      vcu_afx_pll - afx design with SD and EMMC for da6 with pll ref connected to VCU"
# 	puts "      vcu_afx_bypass - afx design with SD and EMMC for da6 with VCU in bypass"
# 	puts "      vcu_trd - trd design with VCU" 
# 	puts "      zcu100_loopback - zcu100 loopback design"
# 	puts "      zcu100_96b_sensors - zcu100 96Boards sensor design"
# 	puts "	    zcu100_mipi - zcu100 mipi camera and i2s design"
# 	puts "      zcu104_vcu_uc2_pll - similar to vcu_uc2_pl design "
# 	puts "      zc1254 "
# 	puts "      zc1275_ps "
# 	puts " -build ... Specifies the output products to be generated. The following options are available:"
# 	puts "      prj, hdf, dsa, bit"
# 	puts "           prj - generates Vivado project with the requested settings"
# 	puts "           hdf - generates Vivado project, plus HDF file"
# 	puts "           dsa - generates Vivado project, plus DSA file"
# 	puts "           bit - generates Vivado project, plus HDF file and BIT file"
# 	puts "           bit-dsa - generates Vivado project, plus DSA file and BIT file"
# 	puts " -jobs ... Specify number of jobs to use for synthesis and implementation"
# 	puts " -filename ... Specify name for output HDF/BIT files"
# 	puts " -help ... This help menu"
# 	puts ""
# 	puts " To pass arguments to a tcl script in Vivado use the -tclargs argument"
# 	puts "      ie: vivado -source <script.tcl> -tclargs <arg1> <arg2> <arg3>"
# }
# proc source_proc { path } {
# 	puts "Sourcing script: $path"
# 	source $path
# }
# set ::silicon "null"
# set ::ps "null"
# set ::preset "null"
# set ::useheadrepo 0
# set ::part ""
# set ::pl "null"
# set board "null"
# set rev "null"
# set dc "null"
# set clk "null"
# set ddr "null"
# set build "null"
# set jobs "null"
# set filename "null"
# if {$argc == 0} {
# 	puts "Vivado is running the following script $argv0"
# } else {
# 	puts "Vivado is running the following script $argv0 with the following arguments $argv"
# }
Vivado is running the following script ../build.tcl with the following arguments -pl none -preset zcu102 -build bit -jobs 16 -filename xilinx-zcu102-2019.1
# for { set i 0 } { $i < $argc } { incr i } {
# 
# 	# Board settings
# 	if { [lindex $argv $i] == "-board" } {
# 		incr i
# 		set board [string tolower [lindex $argv $i]]
# 
# 	# Board Revision settings
# 	} elseif { [lindex $argv $i] == "-rev" } {
# 		incr i
# 		set rev [string tolower [lindex $argv $i]]
# 
# 	# Part settings
# 	} elseif { [lindex $argv $i] == "-silicon" } {
# 		incr i
# 		set silicon [string tolower [lindex $argv $i]]
# 
# 	# PS settings
# 	} elseif { [lindex $argv $i] == "-ps" } {
# 		incr i
# 		set ps [string tolower [lindex $argv $i]]
# 
# 	# Board Preset settings
# 	} elseif { [lindex $argv $i] == "-preset" } {
# 		incr i
# 		set preset [string tolower [lindex $argv $i]]
# 
# 	# Daughter Card settings
# 	} elseif { [lindex $argv $i] == "-dc" } {
# 		incr i 
# 		set dc [string tolower [lindex $argv $i]]
# 	
# 	# Clock Settings
# 	} elseif { [lindex $argv $i] == "-clk" } {
# 		incr i 
# 		set clk [string tolower [lindex $argv $i]]
# 
# 	# DDR settings
# 	} elseif { [lindex $argv $i] == "-ddr" } {
# 		incr i
# 		set ddr [string tolower [lindex $argv $i]]
# 
# 	# PL design
# 	} elseif { [lindex $argv $i] == "-pl" } {
# 		incr i
# 		set pl [string tolower [lindex $argv $i]]
# 
# 	# Build options
# 	} elseif { [lindex $argv $i] == "-build" } {
# 		incr i
# 		set build [string tolower [lindex $argv $i]]
# 
# 	# Synth/impl number of jobs options
# 	} elseif { [lindex $argv $i] == "-jobs" } {
# 		incr i
# 		set jobs [string tolower [lindex $argv $i]]
# 
# 	# Option to use head board repo
# 	} elseif { [lindex $argv $i] == "-useheadrepo" } {
# 		set useheadrepo 1
# 
# 	# Output filename
# 	} elseif { [lindex $argv $i] == "-filename" } {
# 		incr i
# 		set filename [lindex $argv $i]
# 
# 	# Help
# 	} elseif { [lindex $argv $i] == "-help" } {
# 		help_proc
# 		exit
# 
# 	# Default. Invalid argument
# 	} else {
# 		puts "[lindex $argv $i] is an invalid argument"
# 		exit
# 	}
# 	
# 
# }
# if { $board == "null" } {
# 	if { $preset == "null" } {
# 		set board "zc1751"
# 		puts "No -board option given. Defaulting to zc1751"	
# 	} else {
# 		set board $preset
# 	}
# }
# if { $silicon == "null" } {
# 	if { $board == "zc1751" } {	
# 		set silicon "da7"
# 		puts "No -silicon option given. Defaulting to da7"
# 		} elseif { $board == "zc12xx" } {
# 		set silicon "da4"
# 		puts "No -silicon option given. Defaulting to da4"
# 	} elseif { $board == "zc1275" } {
# 		set silicon "dc12-f1760"
# 		puts "No -silicon option given. Defaulting to dc12"
# 	} elseif { $board == "zc1285" } {
# 		set silicon "dc14-f1760-2-e"
# 		puts "No -silicon option given. Defaulting to dc14"
# 	} elseif { $board == "zc165x" } {
# 		set silicon "da7"
# 		puts "No -silicon option given. Defaulting to da7"
# 	} elseif { $board == "zcu102" } {
# 		set silicon "da7" 						
# 		puts "No -silicon option given. Defaulting to da7"
# 	} elseif { $board == "zcu112" } {
# 		set silicon "da7" 						
# 		puts "No -silicon option given. Defaulting to da7"
# 	} elseif { ($board == "zcu100") && (($rev == "a") || ($rev == "b"))} {
# 		set silicon "da2-a484-es1"
# 		puts "No -silicon option given. Defaulting to da2-a484-es1"
# 	} elseif { $board == "zcu100" } {
# 		set silicon "da2-a484"
# 		puts "No -silicon option given. Defaulting to da2-a484"
# 	} elseif { $board == "zcu106" } {
# 		if { $pl == "vcu_trd" } {
# 			set silicon "da6-2-es2"
# 			puts "No -silicon option given. Defaulting to da6-2-es2"
# 		} else {
# 			set silicon "da6-c1156"
# 			puts "No -silicon option given. Defaulting to da6-c1156"
# 		}
# 	} elseif { $board == "zcu104" } {
# 		set silicon "da6-c1156"
# 		puts "No -silicon option given. Defaulting to da6-c1156"
# 	} elseif { $board == "zcu111" } {
# 		set silicon "dc12-g1517-es1"
# 		puts "No -silicon option given. Defaulting to dc12-g1517-es1"
# 	} elseif { $board == "afx" } {
# 		set silicon "da7"
# 		puts "No -silicon option given. Defaulting to da7"
# 	} elseif { $board == "afx_a484" } {
# 		set silicon "da2-a484-es1"
# 		puts "No -silicon option given. Defaulting to da2-a484-es1"
# 	} elseif { $board == "afx_a625" } {
# 		set silicon "da2-es1"
# 		puts "No -silicon option given. Defaulting to da2-es1"
# 	} elseif { $board == "afx_c784" } {
# 		set silicon "da2-c784-es1"
# 		puts "No -silicon option given. Defaulting to da2-c784-es1"
# 	} elseif { $board == "afx_b1156" } {
# 		set silicon "da7"
# 		puts "No -silicon option given. Defaulting to da7"
# 	} elseif { $board == "afx_c1760" } {
# 		set silicon "da11-c1760-es2"
# 		puts "No -silicon option given. Defaulting to da11-c1760-es2"
# 	} elseif { $board == "afx_e1924" } {
# 		set silicon "da11-e1924-es2"
# 		puts "No -silicon option given. Defaulting to da11-c1924-es2"
# 	} elseif { $board == "afx_b1517" } {
# 		set silicon "da11-b1517-es2"
# 		puts "No -silicon option given. Defaulting to da11-b1517-es2"
# 	} elseif { $board == "afx_c1156" } {
# 		set silicon "da6-c1156"
# 		puts "No -silicon option given. Defaulting to da6-c1156"
# 	}
# }
No -silicon option given. Defaulting to da7
# if { $ps == "null" } {
# 	if { [string match "da6*" $silicon] || [string match "da4*" $silicon]} {
# 		set ps "ev"
# 		puts "No -ps option given. Defaulting to ev"
# 	} else {
# 		set ps "eg"
# 		puts "No -ps option given. Defaulting to eg"
# 	}
# }
No -ps option given. Defaulting to eg
# if { $dc == "null" } {
# 	set dc "none"
# 	puts "No -dc option given. Defaulting to none"
# }
No -dc option given. Defaulting to none
# if { ( ( $clk == "null" ) && ( $silicon == "da7-es1" ) )  } {
# 	set clk "sivdef"
# 	puts "No -clk option given. Defaulting to sivdef"
# } elseif { ( ( $clk == "null" ) && ( $silicon == "da10-es1" || $silicon == "da10-b1156-es1" || $silicon == "da2-es1" || $silicon == "da2-a484-es1" || $silicon == "da2-c784-es1" ) )  } {
# 	set clk "sivdef2"
# 	puts "No -clk option given. Defaulting to sivdef2"
# } elseif { ( $clk == "null" ) } {
# 	set clk "sivdef3"
# 	puts "No -clk option given. Defaulting to sivdef3"
# }
No -clk option given. Defaulting to sivdef3
# if { ( ( $ddr == "null" ) && ( $silicon == "da2-a484-es1" ) ) } {
# 	set ddr "default_32bit"
# 	puts "No -ddr option given. Defaulting to default_32bit"
# } elseif { ( $ddr == "null" )} {
# 	set ddr "default"
# 	puts "No -ddr option given. Defaulting to default"
# }
No -ddr option given. Defaulting to default
# if { $pl == "null" } {
# 	set pl "none"
# 	puts "No -pl option given. Defaulting to none"
# }
# if { $build == "null" } {
# 	set build "hdf"
# 	puts "No -build option given. Defaulting to hdf"
# }
# if { $jobs == "null" } {
# 	set jobs 20
# 	puts "No -jobs option given. Defaulting to 20"
# }
# if { $filename == "null" } {
# 	set filename "design"
# 	puts "No -filename option given. Defaulting to design"
# }
# if { $silicon == "da7" || $silicon == "da7-b1156" } {
# 	set silicon "da7"
# 	if { $ps == "eg" } {
# 		set part "xczu9eg-ffvb1156-1-i" 
# 	} elseif { $ps == "cg" } {
# 		set part "xczu9cg-ffvb1156-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da7-es1" } {
# 	set part "xczu9eg-ffvb1156-1-i-es1"
# } elseif { $silicon == "da7-es2" } {
# 	set part "xczu9eg-ffvb1156-1-i-es2"
# #DA7-c900
# } elseif { $silicon == "da7-c900" } {
# 	if { $ps == "eg" } {
# 		set part "xczu9eg-ffvc900-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu9cg-ffvc900-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da7-c900-es2" } {
# 	set part "xczu9eg-ffvc900-1-i-es2"
# #DA2	
# } elseif { $silicon == "da2" || $silicon == "da2-a625" } {
# 	set silicon "da2-a625"
# 	if { $ps == "eg" } {
# 		set part "xczu3eg-sfva625-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu3cg-sfva625-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da2-es1" || $silicon == "da2-a625-es1" } {
# 	set part "xczu3eg-sfva625-1-i-es1"
# #DA2-a484	
# } elseif { $silicon == "da2-a484" } {
# 	if { $ps == "eg" } {
# 		set part "xczu3eg-sbva484-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu3cg-sbva484-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da2-a484-es1" } {
# 	set part "xczu3eg-sbva484-1-i-es1"
# #DA2-c784	
# } elseif { $silicon == "da2-c784" } {
# 	if { $ps == "eg" } {
# 		set part "xczu3eg-sfvc784-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu3cg-sfvc784-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da2-c784-es1" } {
# 	set part "xczu3eg-sfvc784-1-i-es1"
# #DA4-c784
# } elseif { $silicon == "da4" || $silicon == "da4-c784" } {
# 	set silicon "da4-c784"
# 	if { $ps == "eg" } {
# 		set part "xczu5eg-sfvc784-1-i"
# 	} elseif { $ps == "ev" } {
# 		set part "xczu5ev-sfvc784-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu5cg-sfvc784-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA4-b900
# } elseif { $silicon == "da4-b900" } {
# 	set silicon "da4-b900"
# 	if { $ps == "eg" } {
# 		set part "xczu5eg-fbvb900-1-i"
# 	} elseif { $ps == "ev" } {
# 		set part "xczu5ev-fbvb900-1-i"
# 	} elseif { $ps == "cg" } {
# 		set part "xczu5cg-fbvb900-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA6	
# ## set DA6-C1156 parts to -e to support DDR4_VCU controller in 2018.3
# } elseif { $silicon == "da6" || $silicon == "da6-c1156" } {
# 	set silicon "da6-c1156"
# 	set part "xczu7ev-ffvc1156-1-e"
# } elseif { $silicon == "da6-es2" || $silicon == "da6-c1156-es2" } {
# 	set silicon "da6-c1156-es2"
# 	set part "xczu7ev-ffvc1156-1-e-es2"
# } elseif { $silicon == "da6-2-es2" } {
# 	set part "xczu7ev-ffvc1156-2-e-es2"
# } elseif { $silicon == "da6-2" } {
# 	set part "xczu7ev-ffvc1156-2-e"
# #DA6-b900
# } elseif { $silicon == "da6-b900" } {
# 	set silicon "da6-b900"
# 	set part "xczu7ev-fbvb900-1-i"
# } elseif { $silicon == "da6-b900-es2" } {
# 	set silicon "da6-b900-es2"
# 	set part "xczu7ev-fbvb900-1-i-es2"
# #DA6-f1517
# } elseif { $silicon == "da6-f1517" } {
# 	set silicon "da6-f1517"
# 	set part "xczu7ev-ffvf1517-1-i"
# } elseif { $silicon == "da6-f1517-es2" } {
# 	set silicon "da6-f1517"
# 	set part "xczu7ev-ffvf1517-1-i-es2"
# #DA8-c1156
# } elseif { $silicon == "da8-c1156" } {
# 	if { $ps == "eg" } {
# 		set part "xczu11eg-ffvc1156-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA8-c1760
# } elseif { $silicon == "da8-c1760" } {
# 	if { $ps == "eg" } {
# 		set part "xczu11eg-ffvc1760-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA8-b1517
# } elseif { $silicon == "da8-b1517" } {
# 	if { $ps == "eg" } {
# 		set part "xczu11eg-ffvb1517-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA8-f1517
# } elseif { $silicon == "da8-f1517" } {
# 	if { $ps == "eg" } {
# 		set part "xczu11eg-ffvf1517-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# #DA10
# } elseif { $silicon == "da10" || $silicon == "da10-b1156" } {
# 	set silicon "da10"
# 	if { $ps == "eg" } {
# 		set part "xczu15eg-ffvb1156-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da10-es1" || $silicon == "da10-b1156-es1" } {
# 	set silicon "da10-b1156-es1"
# 	set part "xczu15eg-ffvb1156-1-i-es1"
# #DA10-c900	
# } elseif { $silicon == "da10-c900" } {
# 	if { $ps == "eg" } {
# 		set part "xczu15eg-ffvc900-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da10-c900-es1" } {
# 	set part "xczu15eg-ffvc900-1-i-es1"
# #DA11
# } elseif { $silicon == "da11" || $silicon == "da11-c1760" } {
# 	set silicon "da11-c1760"
# 	if { $ps == "eg" } {
# 		set part "xczu19eg-ffvc1760-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da11-c1760-es2" } {
# 	set part "xczu19eg-ffvc1760-1-i-es2"
# #DA11-d1760
# } elseif { $silicon == "da11-d1760" } {
# 	if { $ps == "eg" } {
# 		set part "xczu19eg-ffvd1760-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da11-d1760-es2" } {
# 	set part "xczu19eg-ffvd1760-1-i-es2"
# #DA11-e1924
# } elseif { $silicon == "da11-e1924" } {
# 	if { $ps == "eg" } {
# 		set part "xczu19eg-ffve1924-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da11-e1924-es2" } {
# 	set part "xczu19eg-ffve1924-1-i-es2"
# #DA11-b1517
# } elseif { $silicon == "da11-b1517" } {
# 	if { $ps == "eg" } {
# 		set part "xczu19eg-ffvb1517-1-i"
# 	} else {
# 		puts "Invalid device options selected: $silicon $ps"
# 		exit
# 	}
# } elseif { $silicon == "da11-b1517-es2" } {
# 	set part "xczu19eg-ffvb1517-1-i-es2"
# #DC12-d1156 (zu21dr)
# } elseif { $silicon == "dc12" || $silicon == "dc12-d1156"} {
# 	set silicon "dc12-d1156"
# 	set part "xczu21dr-ffvd1156-1-i"
# } elseif { $silicon == "dc12-es1" || $silicon == "dc12-d1156-es1" } {
# 	set silicon "dc12-d1156-es1"
# 	set part "xczu21dr-ffvd1156-1-i-es1"
# #DC12-e1156 (zu28dr)
# } elseif { $silicon == "dc12-e1156"} {
# 	set silicon "dc12-e1156"
# 	set part "xczu28dr-ffve1156-1-i"
# } elseif { $silicon == "dc12-e1156-es1" } {
# 	set silicon "dc12-e1156-es1"
# 	set part "xczu28dr-ffve1156-1-i-es1"
# #DC12-g1517 (zu28dr)
# } elseif { $silicon == "dc12-g1517"} {
# 	set silicon "dc12-g1517"
# 	set part "xczu28dr-ffvg1517-1-i"
# } elseif { $silicon == "dc12-g1517-2-e" } {
# 	set silicon "dc12-g1517"
# 	set part "xczu28dr-ffvg1517-2-e"
# } elseif { $silicon == "dc12-g1517-2l-e" } {
# 	set silicon "dc12-g1517"
# 	set part "xczu28dr-ffvg1517-2L-e"
# } elseif { $silicon == "dc12-g1517-es1" } {
# 	set silicon "dc12-g1517-es1"
# 	set part "xczu28dr-ffvg1517-1-i-es1"
# #DC12-f1760 (zu29dr)
# } elseif { $silicon == "dc12-f1760"} {
# 	set silicon "dc12-f1760"
# 	set part "xczu29dr-ffvf1760-1-i"
# } elseif { $silicon == "dc12-f1760-es1" } {
# 	set silicon "dc12-f1760-es1"
# 	set part "xczu29dr-ffvf1760-1-i-es1"
# } elseif { $silicon == "dc12-f1760-2-e"} {
# 	set silicon "dc12-f1760"
# 	set part "xczu29dr-ffvf1760-2-e"
# } elseif { $silicon == "dc12-f1760-2-i"} {
# 	set silicon "dc12-f1760"
# 	set part "xczu29dr-ffvf1760-2-i"
# #DC14-f1760 (zu39dr)
# } elseif { $silicon == "dc14-f1760"} {
# 	set silicon "dc14-f1760"
# 	set part "xczu39dr-ffvf1760-1-i"
# } elseif { $silicon == "dc14-f1760-es1" } {
# 	set silicon "dc14-f1760-es1"
# 	set part "xczu39dr-ffvf1760-1-i-es1"
# } elseif { $silicon == "dc14-f1760-2-e"} {
# 	set silicon "dc14-f1760"
# 	set part "xczu39dr-ffvf1760-2-e"
# } elseif { $silicon == "dc14-f1760-2-i"} {
# 	set silicon "dc14-f1760"
# 	set part "xczu39dr-ffvf1760-2-i"
# #other (only illegal if board preset is not used)
# } elseif { $preset == "null" } {
# 	puts "$silicon is an invalid part"
# 	exit
# }
# enable_beta_device *
0 Beta devices matching pattern found, 0 enabled.
# if { $preset != "null" } {
# 	source_proc ../presets/board/board_vivado_preset.tcl
# } elseif { $board == "zc1751" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-b1156-es1" } {
# 		source_proc ../presets/board/board_zc1751.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {$board == "zc12xx" } {
# 	source_proc ../presets/board/board_zc12xx.tcl
# } elseif {$board == "zc1275" || $board == "zc1285"} {
# 	source_proc ../presets/board/board_zc1275.tcl
# } elseif {$board == "zc165x" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-b1156-es1" } {
# 		source_proc ../presets/board/board_zc165x.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {(($board == "zcu102") && ($rev == "1.0"))} {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-b1156-es1" } { 
# 		source_proc ../presets/board/board_zcu102_1_0.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {(($board == "zcu102") && ($rev == "e")) || ($board == "zcu102")} {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-b1156-es1" } { 
# 		source_proc ../presets/board/board_zcu102_E.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {(($board == "zcu100") && (($rev == "b") || ($rev == "c") || ($rev == "null"))) } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da2-a484" || $silicon == "da2-a484-es1" } {
# 		source_proc ../presets/board/board_zcu100_B.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		exit
# 	}
# } elseif {(($board == "zcu100") && ($rev == "a")) } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da2-a484" || $silicon == "da2-a484-es1" } {
# 		source_proc ../presets/board/board_zcu100_A.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		exit
# 	}
# } elseif {$board == "zcu106" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da6" || $silicon == "da6-c1156" || $silicon == "da6-c1156-es2" || $silicon == "da6-2-es2" || $silicon == "da6-2" } {
# 		source_proc ../presets/board/board_zcu106.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		exit
# 	}
# } elseif {$board == "zcu104" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da6" || $silicon == "da6-c1156" || $silicon == "da6-c1156-es2" } {
# 		source_proc ../presets/board/board_zcu104.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		exit
# 	}
# } elseif {$board == "zcu111" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "dc12-g1517" || $silicon == "dc12-g1517-2L-e" || $silicon == "dc12-g1517-es1" } {
# 		source_proc ../presets/board/board_zcu111.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		exit
# 	}
# } elseif {$board == "zcu112" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-b1156-es1" } { 
# 		source_proc ../presets/board/board_zcu112.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {$board == "afx_a484" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da2-a484" || $silicon == "da2-a484-es1" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da2-a484, or da2-a484-es1"
# 		exit
# 	}
# } elseif {$board == "afx_a625" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da2" || $silicon == "da2-a625" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da2, or da2-a625"
# 		exit
# 	}
# } elseif {$board == "afx_b1156" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7" || $silicon == "da7-es1" || $silicon == "da7-es2" || $silicon == "da10" || $silicon == "da10-es1" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7, da7-es1, da7-es2, da10, or da10-es1"
# 		exit
# 	}
# } elseif {$board == "afx_b900" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da6-b900-es2" || $silicon == "da6-b900" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da6-b900"
# 		exit
# 	}
# } elseif {$board == "afx_b1517" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da11-b1517" || $silicon == "da11-b1517-es2" || $silicon == "da8-b1517" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da11-c1760, or da11-c1760-es2 or da8-b1517"
# 		exit
# 	}
# } elseif {$board == "afx_c784" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da2-c784" || $silicon == "da2-c784-es1" || $silicon = "da4-c784" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da2-c784, or da2-c784-es1 or da4-c784"
# 		exit
# 	}
# } elseif {$board == "afx_c900" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da7-c900" || $silicon == "da10-c900"} {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da7-c900, or da10-c900"
# 		exit
# 	}
# } elseif {$board == "afx_c1156" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da6" || $silicon == "da6-c1156" || $silicon == "da6-c1156-es2" || $silicon == "da8-c1156" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da6 or da8-c1156"
# 		exit
# 	}
# } elseif {$board == "afx_c1760" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da11-c1760" || $silicon == "da11-c1760-es2" || $silicon == "da8-c1760" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da11-c1760, or da11-c1760-es2 or da8-c1760"
# 		exit
# 	}
# } elseif {$board == "afx_d1156" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "dc12-d1156" || $silicon == "dc12-d1156-es1" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either dc12-d1156 or dc12-d1156-es1"
# 		exit
# 	}
# } elseif {$board == "afx_e1924" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da11-e1924" || $silicon == "da11-e1924-es2" } {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da11-e1924, or da11-e1924-es2"
# 		exit
# 	}
# } elseif {$board == "afx_f1517" } {
# 	#Check if silicon is compatible with the board
# 	if { $silicon == "da6-f1517" || $silicon == "da8-f1517"} {
# 		source_proc ../presets/board/board_afx.tcl
# 	} else {
# 		puts "Cannot combine $silicon part with $board board"
# 		put "Please use either da6-f1517 or da8-f1517"
# 		exit
# 	}
# } else {
# 	puts "Sourcing custom board subscript: $board"
# 	source_proc $board
# }
Sourcing script: ../presets/board/board_vivado_preset.tcl
## if { $::useheadrepo } {
##    set_param board.repoPaths  /proj/rdi/data/CLs/HEAD_latest/data/boards/board_files
##    puts "Using board file repo from HEAD_latest"
## }
## set proj_board [get_board_parts "*:${::preset}:*" -latest_file_version]
## create_project project_1 . -part [get_property PART_NAME [get_board_parts $proj_board]]
## set_property board_part $proj_board [current_project]
## if { [get_projects -quiet] eq "" } {
##    puts "ERROR: Please open or create a project!"
##    return 1
## }
## set design_name design_1
## create_bd_design $design_name
Wrote  : </tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/design_1.bd> 
create_bd_design: Time (s): cpu = 00:00:03 ; elapsed = 00:00:06 . Memory (MB): peak = 1634.332 ; gain = 37.000 ; free physical = 70634 ; free virtual = 531865
## current_bd_design $design_name
## set parentCell [get_bd_cells /]
## set parentObj [get_bd_cells $parentCell]
## current_bd_instance $parentObj
## set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e zynq_ultra_ps_e_0 ]
## apply_bd_automation -rule xilinx.com:bd_rule:zynq_ultra_ps_e -config {apply_board_preset "1" }  [get_bd_cells zynq_ultra_ps_e_0]
INFO: [PSU-1]  DP_AUDIO clock source: RPLL is also being used by other peripheral clocks. Their outputs may get impacted if any driver changes DP_AUDIO PLL source to support runtime audio change 
## set_property -dict [ list \
## CONFIG.PSU__USE__IRQ0 {0} \
## CONFIG.PSU__USE__M_AXI_GP0 {0} \
## CONFIG.PSU__USE__M_AXI_GP1 {0} \
## ] $zynq_ultra_ps_e_0
INFO: [PSU-1]  DP_AUDIO clock source: RPLL is also being used by other peripheral clocks. Their outputs may get impacted if any driver changes DP_AUDIO PLL source to support runtime audio change 
## save_bd_design
Wrote  : </tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/design_1.bd> 
# if { $dc == "dc1" } {
# 	source_proc ../presets/dc/dc1.tcl
# } elseif { $dc == "dc2" } {
# 	source_proc ../presets/dc/dc2.tcl
# } elseif { $dc == "dc3" } {
# 	source_proc ../presets/dc/dc3.tcl
# } elseif { $dc == "dc4" } {
# 	source_proc ../presets/dc/dc4.tcl
# } elseif { $dc == "dc5" } {
# 	source_proc ../presets/dc/dc5.tcl
# } elseif { $dc == "gt0000" } {
# 	#Check board and dc compatibility
# 	if { ($board == "zcu102") || ($board == "zcu112")} {
# 		source_proc ../presets/dc/zcu102_gt0000.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "gt1100" } {
# 	#Check board and dc compatibility
# 	if { ($board == "zcu102") || ($board == "zcu112") } {
# 		source_proc ../presets/dc/zcu102_gt1100.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "gt1110" } {
# 	#Check board and dc compatibility
# 	if { ($board == "zcu102") || ($board == "zcu112") } {
# 		source_proc ../presets/dc/zcu102_gt1110.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "gt1111" } {
# 	#Check board and dc compatibility
# 	if { $board == "zcu102" } {
# 		source_proc ../presets/dc/zcu102_gt1111.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "afx_qspi" } {
# 	#Check board and dc compatibility
# 	if { [string match "afx*" $board] } {
# 		source_proc ../presets/dc/afx_qspi.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "afx_sd" } {
# 	#Check board and dc compatibility
# 	if { [string match "afx*" $board] } {
# 		source_proc ../presets/dc/afx_sd.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "zc12xx_sata" } {
# 	#Check board and dc compatibility
# 	if { $board == "zc12xx" } {
# 		source_proc ../presets/dc/zc12xx_sata.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "zc1275_ethernet" } {
# 	#Check board and dc compatibility
# 	if { $board == "zc1275" || $board == "zcu1275" || $board == "zc1285" || $board == "zcu1285" } {
# 		source_proc ../presets/dc/zc1275_ethernet.tcl
# 	} else {
# 		puts "Cannot combine $board board with $dc daughter card"
# 		exit
# 	}
# } elseif { $dc == "none" } {
# 	# do nothing
# } else {
# 	puts "Sourcing custom dc subscript: $dc"
# 	source_proc $dc
# }
# if {$preset != "null"} {
# 	#Using Vivado preset, do nothing
# } elseif { $ddr == "default" } {
# 	if { ( ( $silicon == "da2-a484" ) || ( $silicon == "da2-a484-es1" ) ) } {
# 		source_proc ../presets/ddr/lpddr4_auto1066.tcl
# 	} else { 
# 		source_proc ../presets/ddr/ddr_default.tcl
# 	}
# } elseif {$ddr == "default_32bit" } {
# 	source_proc ../presets/ddr/ddr_default_32bit.tcl
# } elseif {$ddr == "ddr4auto1600" } {
# 	source_proc ../presets/ddr/ddr4_auto1600.tcl
# } elseif {$ddr == "ddr4man1600" } {
# 	source_proc ../presets/ddr/ddr4_man1600.tcl
# } elseif {$ddr == "ddr4auto1866" } {
# 	source_proc ../presets/ddr/ddr4_auto1866.tcl
# } elseif {$ddr == "ddr4man1866" } {
# 	source_proc ../presets/ddr/ddr4_man1866.tcl
# } elseif {$ddr == "ddr4auto2133" } {
# 	source_proc ../presets/ddr/ddr4_auto2133.tcl
# } elseif {$ddr == "ddr4auto2133_component" } {
# 	source_proc ../presets/ddr/ddr4_auto2133_component.tcl
# } elseif {$ddr == "ddr4auto2133_micron" } {
# 	source_proc ../presets/ddr/ddr4_auto2133_micron.tcl
# } elseif {$ddr == "ddr4man2133" } {
# 	source_proc ../presets/ddr/ddr4_man2133.tcl
# } elseif {$ddr == "ddr4autobringup" } {
# 	source_proc ../presets/ddr/ddr4_autobringup.tcl
# } elseif {$ddr == "ddr4manbringup" } {
# 	source_proc ../presets/ddr/ddr4_manbringup.tcl
# } elseif {$ddr == "lpddr4auto2133" } {
# 	source_proc ../presets/ddr/lpddr4_auto2133.tcl
# } elseif {$ddr == "ddr3man800" } {
# 	source_proc ../presets/ddr/ddr3_man800.tcl
# } elseif {$ddr == "ddr3man1600" } {
# 	source_proc ../presets/ddr/ddr3_man1600.tcl
# } elseif {$ddr == "ddr3man2133" } {
# 	source_proc ../presets/ddr/ddr3_man2133.tcl
# } elseif {$ddr == "lpddr4auto1066" } {
# 	source_proc ../presets/ddr/lpddr4_auto1066.tcl
# } elseif {$ddr == "lpddr4auto1066_2gb" } {
# 	source_proc ../presets/ddr/lpddr4_auto1066_2gb.tcl
# } elseif {$ddr == "lpddr4auto1066new" } {
# 	source_proc ../presets/ddr/lpddr4_auto1066_new.tcl
# } elseif {$ddr == "none" } {
# 	source_proc ../presets/ddr/ddr_none.tcl
# } else {
# 	puts "Sourcing custom ddr subscript: $ddr"
# 	source_proc $ddr
# }
# if {$preset != "null"} {
# 	#Using Vivado preset, do nothing
# } elseif { $clk == "default" } {
# 	source_proc ../presets/clk/clk_default.tcl
# } elseif {$clk == "sivdef" } {
# 	source_proc ../presets/clk/clk_sivdef.tcl
# } elseif {$clk == "sivdef2" } {
# 	source_proc ../presets/clk/clk_sivdef2.tcl
# } elseif {$clk == "sivdef3" } {
# 	source_proc ../presets/clk/clk_sivdef3.tcl
# } elseif {$clk == "video" } {
# 	source_proc ../presets/clk/clk_video.tcl
# } elseif {$clk == "bringup" } {
# 	source_proc ../presets/clk/clk_bringup.tcl
# } elseif {$clk == "hwdef" } {
# 	source_proc ../presets/clk/clk_hwdef.tcl
# } else {
# 	puts "Sourcing custom clk subscript: $clk"
# 	source_proc $clk
# }
# if { $pl == "none" } {
# 	# Do nothing
# } elseif { $pl == "base" } {
# 	source_proc ../presets/pl/pl_base.tcl
# } elseif { $pl == "mig" } {
# 	source_proc ../presets/pl/pl_mig.tcl
# } elseif { $pl == "bup" } {
# 	source_proc ../presets/pl/pl_bup.tcl
# } elseif { $pl == "bram" } {
# 	if { $silicon == "da10-es1" } {
# 		source_proc ../presets/pl/pl_bram_da10.tcl
# 	} else {
# 		source_proc ../presets/pl/pl_bram.tcl
# 	}
# } elseif { $pl == "trace" } {
# 	source_proc ../presets/pl/pl_emio_trace.tcl
# } elseif { $pl == "vcu_uc1_pll" } {
# 	source_proc ../presets/pl/pl_vcu_uc1_pll.tcl
# } elseif { $pl == "vcu_uc1_bypass" } {
# 	source_proc ../presets/pl/pl_vcu_uc1_bypass.tcl
# } elseif { $pl == "vcu_uc2_pll" } {
# 	source_proc ../presets/pl/pl_vcu_uc2_pll.tcl
# } elseif { $pl == "vcu_uc2_bypass" } {
# 	source_proc ../presets/pl/pl_vcu_uc2_bypass.tcl
# } elseif { $pl == "vcu_afx_pll" } {
# 	source_proc ../presets/pl/pl_vcu_afx_pll.tcl
# } elseif { $pl == "vcu_trd" } {
# 	source_proc ../presets/pl/pl_vcu_trd.tcl
# } elseif { $pl == "vcu_zc1232_pll" } {
# 	source_proc ../presets/pl/pl_vcu_afx_pll.tcl
# } elseif { $pl == "vcu_afx_bypass" } {
# 	source_proc ../presets/pl/pl_vcu_afx_bypass.tcl
# } elseif { $pl == "zcu100_loopback" } {
# 	source_proc ../presets/pl/pl_zcu100_loopback.tcl
# } elseif { $pl == "zcu100_96b_sensors" } {
# 	source_proc ../presets/pl/pl_zcu100_96b_sensors.tcl
# } elseif { $pl == "zcu100_mipi" } {
# 	source_proc ../presets/pl/pl_zcu100_mipi.tcl
# } elseif { $pl == "zcu104_vcu_uc2_pll" } {
# 	source_proc ../presets/pl/pl_zcu104_vcu_uc2_pll.tcl
# } elseif { $pl == "zc1254" } {
# 	source_proc ../presets/pl/pl_zc1254.tcl
# } elseif { $pl == "zc1254_sdfec" } {
# 	source_proc ../presets/pl/pl_zc1254_sdfec.tcl
# } elseif { $pl == "zc1275_ps" } {
# 	source_proc ../presets/pl/pl_zc1275_ps.tcl
# } elseif { $pl == "zc1275_uc1" } {
# 	source_proc ../presets/pl/pl_zc1275_uc1.tcl
# } elseif { $pl == "zc1275_rfdc" } {
# 	source_proc ../presets/pl/pl_zc1275_rfdc.tcl
# } elseif { $pl == "zc1275_rfsoc_ethernet" } {
# 	source_proc ../presets/pl/pl_zc1275_rfsoc_ethernet.tcl
# } elseif { $pl == "zcu111_sdfec" } {
# 	source_proc ../presets/pl/pl_zcu111_sdfec_ps.tcl
# } else {
# 	puts "Sourcing custom pl subscript: $pl"
# 	source_proc $pl
# }
# set fd [open ./README.hw w] 
# puts $fd "##########################################################################"
# puts $fd "This is a brief document containing design specific details for : ${board}"
# puts $fd "This is auto-generated by Petalinux ref-design builder created @ [clock format [clock seconds] -format {%a %b %d %H:%M:%S %Z %Y}]"
# puts $fd "##########################################################################"
# set board_part [get_board_parts [current_board_part -quiet]]
# if { $board_part != ""} {
# 	puts $fd "BOARD: $board_part" 
# }
# set design_name [get_property NAME [get_bd_designs]]
# puts $fd "BLOCK DESIGN: $design_name" 
# set columns {%40s%30s%15s%50s}
# puts $fd [string repeat - 150]
# puts $fd [format $columns "MODULE INSTANCE NAME" "IP TYPE" "IP VERSION" "IP"]
# puts $fd [string repeat - 150]
# foreach ip [get_ips] {
# 	set catlg_ip [get_ipdefs -all [get_property IPDEF $ip]]	
# 	puts $fd [format $columns [get_property NAME $ip] [get_property NAME $catlg_ip] [get_property VERSION $catlg_ip] [get_property VLNV $catlg_ip]]
# }
# close $fd
# save_bd_design
# make_wrapper -files [get_files ./project_1.srcs/sources_1/bd/design_1/design_1.bd] -top
INFO: [PSU-1]  DP_AUDIO clock source: RPLL is also being used by other peripheral clocks. Their outputs may get impacted if any driver changes DP_AUDIO PLL source to support runtime audio change 
Wrote  : </tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/design_1.bd> 
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/synth/design_1.v
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/sim/design_1.v
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v
# add_files -norecurse ./project_1.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v
# update_compile_order
# set_property top design_1_wrapper [current_fileset]
# update_compile_order -fileset sources_1
# if { $build == "prj" } {
# 	# do nothing
# } elseif { $build == "hdf" } { 
# 	# export HDF
# 	generate_target all [get_files ./project_1.srcs/sources_1/bd/design_1/design_1.bd]
# 	file mkdir ./project_1.sdk
# 	write_hwdef -force -file ./project_1.sdk/design_1_wrapper.hdf
# 	file copy -force ./project_1.sdk/design_1_wrapper.hdf ./${filename}.hdf
# } elseif { $build == "dsa" } { 
# 	# export DSA
# 	generate_target all [get_files ./project_1.srcs/sources_1/bd/design_1/design_1.bd]
# 	file mkdir ./project_1.sdk
# 	write_dsa -fixed -force -file ./project_1.sdk/design_1_wrapper.dsa
# 	file copy -force ./project_1.sdk/design_1_wrapper.dsa ./${filename}.dsa
# } elseif { $build == "bit" || $build == "bit-dsa" } {
# 	# run synth/impl flows and generate bitstream
# 	generate_target all [get_files ./project_1.srcs/sources_1/bd/design_1/design_1.bd]
# 	launch_runs synth_1 -jobs $jobs
# 	set_property strategy Performance_Explore [get_runs impl_1]
# 	launch_runs impl_1 -to_step write_bitstream -jobs $jobs
# 	wait_on_run impl_1
# 	# export HDF or DSA
# 	file mkdir ./project_1.sdk 
# 	if { $build == "bit" } {
# 		file copy -force ./project_1.runs/impl_1/design_1_wrapper.sysdef ./project_1.sdk/design_1_wrapper.hdf
# 		file copy -force ./project_1.sdk/design_1_wrapper.hdf ./${filename}.hdf	
# 	} elseif { $build == "bit-dsa" } {
# 		write_dsa -fixed -force -include_bit -file ./project_1.sdk/design_1_wrapper.dsa
# 		file copy -force ./project_1.sdk/design_1_wrapper.dsa ./${filename}.dsa
# 	}
#     # copy BIT to desired location
# 	file copy -force ./project_1.runs/impl_1/design_1_wrapper.bit ./${filename}.bit
# # error out if invalid option given
# } else {
# 	puts "Invalid build option. Run -help for options"
# }
INFO: [BD 41-1662] The design 'design_1.bd' is already validated. Therefore parameter propagation will not be re-run.
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/synth/design_1.v
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/sim/design_1.v
VHDL Output written to : /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/hdl/design_1_wrapper.v
INFO: [xilinx.com:ip:zynq_ultra_ps_e:3.3-0] design_1_zynq_ultra_ps_e_0_0: 
Changes in your design (including the PCW configuration settings) are not automatically exported from Vivado to Xilinx's SDK, Petalinux or Yocto.
This is by design to avoid disrupting existing embedded development efforts. To have any changes of your design taking effect in the embedded software flow please export your
design by going through Vivado's main menu, click on File, then Export finally select Export Hardware, please ensure you click on the Include BitStream option.
The auto-generated HDF file is all you need to import in Xilinx's SDK, Petalinux or Yocto for your changes to be reflected in the Embedded Software Flow.
For more information, please consult PG201, section: Exporting PCW Settings to Embedded Software Flows
INFO: [PSU-0] Address Range of DDR (0x7ff00000 to 0x7fffffff) is reserved by PMU for internal purpose.
INFO: [BD 41-1029] Generation completed for the IP Integrator block zynq_ultra_ps_e_0 .
Exporting to file /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/hw_handoff/design_1.hwh
Generated Block Design Tcl file /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/hw_handoff/design_1_bd.tcl
Generated Hardware Definition File /tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/synth/design_1.hwdef
generate_target: Time (s): cpu = 00:00:21 ; elapsed = 00:00:23 . Memory (MB): peak = 1986.375 ; gain = 134.488 ; free physical = 69737 ; free virtual = 531162
[Sat May 25 00:37:05 2019] Launched design_1_zynq_ultra_ps_e_0_0_synth_1...
Run output will be captured here: /tmp/tmp.m62wemyBVS/temp/project_1.runs/design_1_zynq_ultra_ps_e_0_0_synth_1/runme.log
[Sat May 25 00:37:05 2019] Launched synth_1...
Run output will be captured here: /tmp/tmp.m62wemyBVS/temp/project_1.runs/synth_1/runme.log
[Sat May 25 00:37:07 2019] Launched design_1_zynq_ultra_ps_e_0_0_synth_1, synth_1...
Run output will be captured here:
design_1_zynq_ultra_ps_e_0_0_synth_1: /tmp/tmp.m62wemyBVS/temp/project_1.runs/design_1_zynq_ultra_ps_e_0_0_synth_1/runme.log
synth_1: /tmp/tmp.m62wemyBVS/temp/project_1.runs/synth_1/runme.log
[Sat May 25 00:37:07 2019] Launched impl_1...
Run output will be captured here: /tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/runme.log
[Sat May 25 00:37:07 2019] Waiting for impl_1 to finish...

*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2019.1 (64-bit)
  **** SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
  **** IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
    ** Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

Sourcing tcl script '/tmp/tmp.m62wemyBVS/dummy.tcl'
100 Beta devices matching pattern found, 100 enabled.
enable_beta_device: Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 1540.094 ; gain = 10.516 ; free physical = 46160 ; free virtual = 508017
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/proj/xbuilds/2019.1_0524_1430/installs/lin64/Vivado/2019.1/data/ip'.
add_files: Time (s): cpu = 00:00:04 ; elapsed = 00:00:09 . Memory (MB): peak = 1583.223 ; gain = 43.129 ; free physical = 46532 ; free virtual = 509538
Command: link_design -top design_1_wrapper -part xczu9eg-ffvb1156-2-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xczu9eg-ffvb1156-2-e
INFO: [Project 1-454] Reading design checkpoint '/tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.dcp' for cell 'design_1_i/zynq_ultra_ps_e_0'
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
create_clock: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 2469.062 ; gain = 0.000 ; free physical = 22112 ; free virtual = 483633
Finished Parsing XDC File [/tmp/tmp.m62wemyBVS/temp/project_1.srcs/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2540.598 ; gain = 0.000 ; free physical = 21735 ; free virtual = 482947
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

9 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:26 ; elapsed = 00:00:58 . Memory (MB): peak = 2540.598 ; gain = 957.375 ; free physical = 21734 ; free virtual = 482946
Command: opt_design -directive Explore
INFO: [Vivado_Tcl 4-136] Directive used for opt_design is: Explore
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:05 . Memory (MB): peak = 2557.348 ; gain = 16.750 ; free physical = 20978 ; free virtual = 481837

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 7692e981

Time (s): cpu = 00:00:05 ; elapsed = 00:00:16 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21594 ; free virtual = 481138
INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 264 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 643db585

Time (s): cpu = 00:00:05 ; elapsed = 00:00:16 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21592 ; free virtual = 481135
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 2 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 89abcf42

Time (s): cpu = 00:00:06 ; elapsed = 00:00:17 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21499 ; free virtual = 481042
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 36 cells
INFO: [Opt 31-1021] In phase Sweep, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 89abcf42

Time (s): cpu = 00:00:06 ; elapsed = 00:00:17 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21484 ; free virtual = 481028
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 89abcf42

Time (s): cpu = 00:00:06 ; elapsed = 00:00:17 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21476 ; free virtual = 481020
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 89abcf42

Time (s): cpu = 00:00:06 ; elapsed = 00:00:17 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21482 ; free virtual = 481026
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               0  |             264  |                                              0  |
|  Constant propagation         |               0  |               2  |                                              0  |
|  Sweep                        |               0  |              36  |                                              1  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              1  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2804.848 ; gain = 0.000 ; free physical = 21478 ; free virtual = 481022
Ending Logic Optimization Task | Checksum: f3b1c587

Time (s): cpu = 00:00:06 ; elapsed = 00:00:17 . Memory (MB): peak = 2804.848 ; gain = 247.500 ; free physical = 21467 ; free virtual = 481011

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: f3b1c587

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2804.848 ; gain = 0.000 ; free physical = 21451 ; free virtual = 480998

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2804.848 ; gain = 0.000 ; free physical = 21451 ; free virtual = 480997
Ending Netlist Obfuscation Task | Checksum: f3b1c587

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2804.848 ; gain = 0.000 ; free physical = 21449 ; free virtual = 480996
INFO: [Common 17-83] Releasing license: Implementation
28 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:11 ; elapsed = 00:00:24 . Memory (MB): peak = 2804.848 ; gain = 264.250 ; free physical = 21446 ; free virtual = 480994
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2804.848 ; gain = 0.000 ; free physical = 21444 ; free virtual = 480992
INFO: [Timing 38-480] Writing timing data to binary archive.
INFO: [Common 17-1381] The checkpoint '/tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
Command: place_design -directive Explore
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 46-5] The placer was invoked with the 'Explore' directive.
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2944.195 ; gain = 0.000 ; free physical = 19620 ; free virtual = 479038
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 00000000

Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.08 . Memory (MB): peak = 2944.195 ; gain = 0.000 ; free physical = 19634 ; free virtual = 479052
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2944.195 ; gain = 0.000 ; free physical = 19631 ; free virtual = 479049

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 9a35c62d

Time (s): cpu = 00:00:46 ; elapsed = 00:01:53 . Memory (MB): peak = 4161.719 ; gain = 1217.523 ; free physical = 35341 ; free virtual = 491656

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 197b350de

Time (s): cpu = 00:00:48 ; elapsed = 00:01:59 . Memory (MB): peak = 4193.730 ; gain = 1249.535 ; free physical = 35214 ; free virtual = 491526

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 197b350de

Time (s): cpu = 00:00:48 ; elapsed = 00:01:59 . Memory (MB): peak = 4193.730 ; gain = 1249.535 ; free physical = 35213 ; free virtual = 491525
Phase 1 Placer Initialization | Checksum: 197b350de

Time (s): cpu = 00:00:48 ; elapsed = 00:01:59 . Memory (MB): peak = 4193.730 ; gain = 1249.535 ; free physical = 35224 ; free virtual = 491536

Phase 2 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 35223 ; free virtual = 491535
Phase 2 Final Placement Cleanup | Checksum: 197b350de

Time (s): cpu = 00:00:48 ; elapsed = 00:01:59 . Memory (MB): peak = 4193.730 ; gain = 1249.535 ; free physical = 35224 ; free virtual = 491536
INFO: [Place 30-281] No place-able instance is found; design doesn't contain any instance or all instances are placed
Ending Placer Task | Checksum: 9a35c62d

Time (s): cpu = 00:00:48 ; elapsed = 00:01:59 . Memory (MB): peak = 4193.730 ; gain = 1249.535 ; free physical = 35222 ; free virtual = 491534
INFO: [Common 17-83] Releasing license: Implementation
46 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:50 ; elapsed = 00:02:02 . Memory (MB): peak = 4193.730 ; gain = 1258.441 ; free physical = 35237 ; free virtual = 491549
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 35227 ; free virtual = 491538
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.51 ; elapsed = 00:00:00.27 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 35135 ; free virtual = 491450
INFO: [Common 17-1381] The checkpoint '/tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.33 ; elapsed = 00:00:00.73 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 34864 ; free virtual = 491178
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.18 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 34685 ; free virtual = 490999
Command: phys_opt_design -directive Explore
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Vivado_Tcl 4-241] Physical synthesis in post route mode ( 100.0% nets are fully routed)
INFO: [Vivado_Tcl 4-137] Directive used for phys_opt_design is: Explore
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
58 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 34644 ; free virtual = 490958
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.34 ; elapsed = 00:00:00.11 . Memory (MB): peak = 4193.730 ; gain = 0.000 ; free physical = 34644 ; free virtual = 490961
INFO: [Common 17-1381] The checkpoint '/tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
Command: route_design -directive Explore
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-270] Using Router directive 'Explore'.
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs
Checksum: PlaceDB: 9a35c62d ConstDB: 0 ShapeSum: 0 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: a40e060d

Time (s): cpu = 00:01:28 ; elapsed = 00:01:11 . Memory (MB): peak = 4235.723 ; gain = 41.992 ; free physical = 27709 ; free virtual = 485133
Post Restoration Checksum: NetGraph: 85c43808 NumContArr: 1e49ce05 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: a40e060d

Time (s): cpu = 00:01:28 ; elapsed = 00:01:11 . Memory (MB): peak = 4242.566 ; gain = 48.836 ; free physical = 27694 ; free virtual = 485119

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: a40e060d

Time (s): cpu = 00:01:28 ; elapsed = 00:01:11 . Memory (MB): peak = 4267.918 ; gain = 74.188 ; free physical = 27631 ; free virtual = 485056

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: a40e060d

Time (s): cpu = 00:01:28 ; elapsed = 00:01:11 . Memory (MB): peak = 4267.918 ; gain = 74.188 ; free physical = 27630 ; free virtual = 485055

Phase 2.4 Global Clock Net Routing
Phase 2.4 Global Clock Net Routing | Checksum: a40e060d

Time (s): cpu = 00:01:29 ; elapsed = 00:01:13 . Memory (MB): peak = 4307.246 ; gain = 113.516 ; free physical = 27713 ; free virtual = 484718

Phase 2.5 Update Timing
Phase 2.5 Update Timing | Checksum: a40e060d

Time (s): cpu = 00:01:29 ; elapsed = 00:01:13 . Memory (MB): peak = 4307.246 ; gain = 113.516 ; free physical = 27686 ; free virtual = 484691
Phase 2 Router Initialization | Checksum: a40e060d

Time (s): cpu = 00:01:29 ; elapsed = 00:01:13 . Memory (MB): peak = 4307.246 ; gain = 113.516 ; free physical = 27668 ; free virtual = 484673

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 2
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 2
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
 Number of Nodes with overlaps = 0
Phase 3 Initial Routing | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26613 ; free virtual = 483536

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
Phase 4.1 Global Iteration 0 | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26613 ; free virtual = 483537

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26618 ; free virtual = 483542
Phase 4 Rip-up And Reroute | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26619 ; free virtual = 483543

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26649 ; free virtual = 483573

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26656 ; free virtual = 483580
Phase 5 Delay and Skew Optimization | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26658 ; free virtual = 483582

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26702 ; free virtual = 483626
Phase 6.1 Hold Fix Iter | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26713 ; free virtual = 483638
Phase 6 Post Hold Fix | Checksum: 8084f8b2

Time (s): cpu = 00:01:34 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26724 ; free virtual = 483649

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.000685604 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 8084f8b2

Time (s): cpu = 00:01:35 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26931 ; free virtual = 483795

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 8084f8b2

Time (s): cpu = 00:01:35 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26930 ; free virtual = 483788

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 8084f8b2

Time (s): cpu = 00:01:35 ; elapsed = 00:01:15 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26919 ; free virtual = 483778

Phase 10 Route finalize
Phase 10 Route finalize | Checksum: 8084f8b2

Time (s): cpu = 00:01:35 ; elapsed = 00:01:16 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26912 ; free virtual = 483771

Phase 11 Post Router Timing
INFO: [Route 35-20] Post Routing Timing Summary | WNS=inf    | TNS=0.000  | WHS=inf    | THS=0.000  |

INFO: [Route 35-61] The design met the timing requirement.
Phase 11 Post Router Timing | Checksum: 8084f8b2

Time (s): cpu = 00:01:35 ; elapsed = 00:01:16 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 26902 ; free virtual = 483763
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:35 ; elapsed = 00:01:16 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 27118 ; free virtual = 483903

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
70 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:36 ; elapsed = 00:01:17 . Memory (MB): peak = 4308.250 ; gain = 114.520 ; free physical = 27122 ; free virtual = 483907
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4308.250 ; gain = 0.000 ; free physical = 27120 ; free virtual = 483905
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.45 ; elapsed = 00:00:00.14 . Memory (MB): peak = 4308.250 ; gain = 0.000 ; free physical = 27042 ; free virtual = 483833
INFO: [Common 17-1381] The checkpoint '/tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Coretcl 2-168] The results of DRC are in file /tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 8 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /tmp/tmp.m62wemyBVS/temp/project_1.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
82 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 8 CPUs
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu9eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu9eg'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 8 threads
INFO: [Vivado 12-3199] DRC finished with 0 Errors
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 8 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-118] WebTalk data collection is enabled (User setting is ON. Install Setting is ON.).
INFO: [Common 17-83] Releasing license: Implementation
101 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:30 ; elapsed = 00:00:40 . Memory (MB): peak = 4401.367 ; gain = 5.074 ; free physical = 33183 ; free virtual = 489366
INFO: [Common 17-206] Exiting Vivado at Sat May 25 00:48:21 2019...
[Sat May 25 00:48:25 2019] impl_1 finished
wait_on_run: Time (s): cpu = 00:02:37 ; elapsed = 00:11:18 . Memory (MB): peak = 2025.895 ; gain = 0.000 ; free physical = 32902 ; free virtual = 489104
INFO: [Common 17-206] Exiting Vivado at Sat May 25 00:48:27 2019...
